# Cross compile the website docker container and push to Docker Hub
name: Cross Compile node-feature-discovery

on:
  push:
    branches:
      - master
      - release-*
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Get the Short SHA Hash
      - name: Get the version
        id: vars
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      # This is required in order to build ARM images
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # This is required in order to cross-compile ARM images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Makes sure to log into Dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # Should be the equivilant of this command
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          no-cache: true
          build-args: |
            BASE_IMAGE_FULL=debian:buster-slim
            BASE_IMAGE_MINIMAL=gcr.io/distroless/base
          tags: |
            danielmanners/node-feature-discovery:${{ steps.vars.outputs.VERSION }}
